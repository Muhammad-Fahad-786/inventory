openapi: 3.0.0
info:
  title: Inventory Management System API
  description: A comprehensive API for managing inventory products and users
  version: 1.0.0
  contact:
    name: API Support
    email: support@inventory-system.com

servers:
  - url: http://localhost:5000/api
    description: Development server
  - url: https://api.inventory-system.com/api
    description: Production server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          minLength: 3
          maxLength: 30
          pattern: '^[a-zA-Z0-9]+$'
        password:
          type: string
          minLength: 6

    Product:
      type: object
      required:
        - name
        - type
        - sku
        - description
        - quantity
        - price
      properties:
        name:
          type: string
          maxLength: 100
        type:
          type: string
          maxLength: 50
        sku:
          type: string
          maxLength: 20
        description:
          type: string
          maxLength: 500
        quantity:
          type: integer
          minimum: 0
        price:
          type: number
          minimum: 0
        image_url:
          type: string
          format: uri
        addCount:
          type: integer
          minimum: 1
          default: 1

    Error:
      type: object
      properties:
        message:
          type: string
        details:
          type: string

paths:
  /register:
    post:
      summary: Register a new user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User created successfully"
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Username already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /login:
    post:
      summary: Login user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /products:
    get:
      summary: Get all products with pagination
      tags:
        - Products
      security:
        - BearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
        - name: search
          in: query
          schema:
            type: string
        - name: type
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Products retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
                  pagination:
                    type: object
                    properties:
                      currentPage:
                        type: integer
                      totalPages:
                        type: integer
                      totalProducts:
                        type: integer
                      hasNextPage:
                        type: boolean
                      hasPrevPage:
                        type: boolean

    post:
      summary: Add a new product
      tags:
        - Products
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Product added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Product added successfully"
                  product_id:
                    type: string
                    example: "64f8a1b2c3d4e5f6a7b8c9d0"

  /products/{id}/quantity:
    put:
      summary: Update product quantity
      tags:
        - Products
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - quantity
              properties:
                quantity:
                  type: integer
                  minimum: 0
      responses:
        '200':
          description: Quantity updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'

  /analytics/top-products:
    get:
      summary: Get top products by add count
      tags:
        - Analytics
      security:
        - BearerAuth: []
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Top products retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'

  /analytics/summary:
    get:
      summary: Get inventory summary statistics
      tags:
        - Analytics
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Summary statistics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalProducts:
                    type: integer
                  totalInventoryValue:
                    type: number
                  totalQuantity:
                    type: integer
                  lowStockProducts:
                    type: integer
